name: PR Review with GPT-3

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  review_pr:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install # or any other dependency setup

      - name: Generate review with GPT-3
        env:
          GPT_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_MODEL: "gpt-3.5-turbo"
        run: |
          # Fetch pull request details
          pr_title=$(jq -r '.pull_request.title' $GITHUB_EVENT_PATH)
          pr_body=$(jq -r '.pull_request.body' $GITHUB_EVENT_PATH)
          pr_number=$(jq -r '.pull_request.number' $GITHUB_EVENT_PATH)
          pr_repo=$(jq -r '.repository.full_name' $GITHUB_EVENT_PATH)
          
          # Construct input for GPT-3
          input="Pull request title: $pr_title\nPull request description: $pr_body"
          
          # Call OpenAI API to generate review
          response=$(curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer $GPT_API_KEY" -d "{\"prompt\": \"$input\"}" https://api.openai.com/v1/completions)
          
          # Print response for debugging
          echo "OpenAI API Response:"
          echo "$response"
          
          #Extract review from API response if choices array is not empty
          if [[ $(echo "$response" | jq -r '.choices | length') -gt 0 ]]; then
            review=$(echo "$response" | jq -r '.choices[].text')
            echo "Generated Review:"
            echo "$review"
            
            # Comment on the pull request with the generated review
            curl -X POST -H "Authorization: token $GITHUB_TOKEN" -d "{\"body\": \"$review\"}" "https://api.github.com/repos/$pr_repo/issues/$pr_number/comments"
          else
            echo "No review generated."
          fi
