name: PR Review with GPT-3

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  review_pr:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install # or any other dependency setup

      - name: Generate review with GPT-3
        env:
          GPT_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch pull request details
          pr_title=$(jq -r '.pull_request.title' $GITHUB_EVENT_PATH)
          pr_body=$(jq -r '.pull_request.body' $GITHUB_EVENT_PATH)
          pr_number=$(jq -r '.pull_request.number' $GITHUB_EVENT_PATH)
          pr_repo=$(jq -r '.repository.full_name' $GITHUB_EVENT_PATH)

          echo "$pr_repo"

          # Fetch pull request diff
          pr_diff=$(curl -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3.diff" "https://api.github.com/repos/$pr_repo/pulls/$pr_number")
          
          
          # Construct input for GPT-3
          input='{"model": "gpt-3.5-turbo-0125", "messages": [{"role": "system", 
          "content": "Your task is to create a review for the following pull request: $pr_title\n\n$pr_body\n\n$pr_diff. Do not give positive comments or compliments. Provide comments and suggestions ONLY if there is something to improve, otherwise reviews should be an empty array. Write the comment in GitHub Markdown format. Use the given description only for the overall context and only comment the code. IMPORTANT: NEVER suggest adding comments to the code"}]}'
          
          # Call OpenAI API to generate review
          response=$(curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer $GPT_API_KEY" -d "$input" https://api.openai.com/v1/chat/completions)
          
          # Print response for debugging
          echo "OpenAI API Response:"
          echo "$response"
          
          #Extract review from API response if choices array is not empty
          if [[ $(echo "$response" | jq -r '.choices | length') -gt 0 ]]; then
            review=$(echo "$response" | jq '.choices[].message.content')
            echo "Generated Review:"
            echo "$review"
            data='{"body": "$review"}'
            echo "$data"
            
            # Comment on the pull request with the generated review
            curl -X POST -H "Content-Type: application/json" -H "Authorization: token $GITHUB_TOKEN" -d "$data" "https://api.github.com/repos/$pr_repo/issues/$pr_number/comments"
          else
            echo "No review generated."
          fi
